blueprint:
  name: Obico Webhook
  description: Receive Obico server notifications via webhook and notify a mobile app.
  domain: automation
  input:
    webhook_id:
      name: Webhook ID
      description: The webhook ID to listen for.
      selector:
        text:
    camera_entity:
      name: Camera Entity
      description: Camera entity for capturing snapshots (used for print failures).
      selector:
        entity:
          domain: camera

trigger:
  - platform: webhook
    webhook_id: !input webhook_id
    allowed_methods:
      - POST
      - PUT
    local_only: true

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ 'FilamentChange' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: >
                Date: {{ now().strftime("%Y-%m-%d %H:%M:%S") }}

                Printer requires attention!
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'PrintCancelled' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: >
                Date: {{ now().strftime("%Y-%m-%d %H:%M:%S") }}

                Print has been cancelled
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'PrintDone' in trigger.json.event.type }}"
        sequence:
          - delay: "00:05:00"
          - service: notify.notify
            data:
              message: >
                Date: {{ now().strftime("%Y-%m-%d %H:%M:%S") }}

                Print has completed
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'PrintFailure' in trigger.json.event.type }}"
        sequence:
          - service: camera.snapshot
            target:
              entity_id: !input camera_entity
            data:
              filename: /config/www/obico/print_issue.jpg
          - service: notify.notify
            data:
              message: Attention! Possible failure during print!
              data:
                image: /media/local/obico/print_issue.jpg
      - conditions:
          - condition: template
            value_template: "{{ 'PrintPaused' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: >
                Date: {{ now().strftime("%Y-%m-%d %H:%M:%S") }}

                Print has paused
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'PrintResumed' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: >
                Date: {{ now().strftime("%Y-%m-%d %H:%M:%S") }}

                Print has resumed
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'PrintStarted' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: >
                Date: {{ now().strftime("%Y-%m-%d %H:%M:%S") }}

                Print has started
                Filename: `{{ trigger.json.print.filename }}`
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'HeaterCooledDown' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: Payload {{ trigger.json }}
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
      - conditions:
          - condition: template
            value_template: "{{ 'HeaterTargetReached' in trigger.json.event.type }}"
        sequence:
          - service: notify.notify
            data:
              message: Payload {{ trigger.json }}
              title: "*Obico Server:* {{ trigger.json.printer.name }}"
